{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMfCVgTVxmdaANgrpmgFf7J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CK2a-8jUbqo0","executionInfo":{"status":"ok","timestamp":1738731248250,"user_tz":-330,"elapsed":483,"user":{"displayName":"RishaMadhuri Kamal","userId":"15162245689330543671"}},"outputId":"e06467d2-7939-4630-de6d-a769c6dce030"},"outputs":[{"output_type":"stream","name":"stdout","text":["original array: [1 2 3 4 5]\n","Product array: [120, 60, 40, 30, 24]\n"]}],"source":["#array special product with division\n","import numpy as np\n","import math\n","x = np.array([1,2,3,4,5])\n","def pro_ExceptSelf_div(x):\n","    total_product = math.prod(x)\n","    prod_arr = []\n","    for i in x:\n","        prod_arr.append(total_product//i)\n","    return prod_arr\n","print(\"original array:\",x)\n","prod_arr = pro_ExceptSelf_div(x)\n","print(\"Product array:\",prod_arr)"]},{"cell_type":"code","source":[],"metadata":{"id":"_oYUBrKIdJt0"},"execution_count":null,"outputs":[]}]}