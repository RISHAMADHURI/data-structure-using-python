{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOcTUPvSSvMjJp62V8gs2v2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"knToOmHwXHTp","executionInfo":{"status":"ok","timestamp":1738730703901,"user_tz":-330,"elapsed":5,"user":{"displayName":"RishaMadhuri Kamal","userId":"15162245689330543671"}},"outputId":"4971a801-a67a-4bbb-f622-3578618dbfe4"},"outputs":[{"output_type":"stream","name":"stdout","text":["[120, 60, 40, 30, 24]\n"]}],"source":["import numpy as np\n","x = np.array([1,2,3,4,5])\n","def pro_ExceptSelf(x):\n","  n = len(x)\n","  res = [1]*n\n","  for i in range(n):\n","    for j in range(n):\n","      if i != j:\n","        res[i] *= x[j]\n","  return res\n","res = pro_ExceptSelf(x)\n","print(res)"]},{"cell_type":"code","source":[],"metadata":{"id":"_8m24N4-bGEM","executionInfo":{"status":"ok","timestamp":1738730703529,"user_tz":-330,"elapsed":429,"user":{"displayName":"RishaMadhuri Kamal","userId":"15162245689330543671"}}},"execution_count":null,"outputs":[]}]}